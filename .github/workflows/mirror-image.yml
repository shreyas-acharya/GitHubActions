name: Cron Job to Mirror Python Image

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

concurrency:
  group: "secure-container-base"

jobs:
  Mirror-Images:
    runs-on: ubuntu-latest
    steps:
      - name: Install regclient
        run: |
          sudo apt install curl
          curl -L https://github.com/regclient/regclient/releases/latest/download/regctl-linux-amd64 >regctl
          chmod 755 regctl

      - name: Set up Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.SECURITY_AWS_ACCOUNT_ROLE_ARN }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"
          registry-type: public

      - name: Mirror Python Images
        env:
          ECR_REGISTRY: "${{ steps.login-ecr.outputs.registry }}"
          ECR_REGISTRY_ALIAS: "amagi-media-labs-sec"
          ECR_REPOSITORY: "secure-container-base"
          IMAGE_NAME: "python"
        run: |
          version=$(docker run --rm cgr.dev/chainguard/$IMAGE:latest --version | grep -oP "[0-9]+\.[0-9]+\.[0-9]+")
          IFS="." read -r -a parts <<< $version
          versions=(latest)
          current=""
          for value in ${parts[@]}; do [[ -z $current ]] && current=$value || current+=".$value" ; versions=(${versions[@]} "$current"); done
          for tag in ${versions[@]}; do ./regctl image copy cgr.dev/chainguard/$IMAGE:latest $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY/$IMAGE:$tag; done

